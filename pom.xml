<?xml version="1.0" encoding="UTF-8"?>

<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>it.cnit.nfvmano</groupId>
  <artifactId>5g-context-composer</artifactId>
  <version>0.0.1-SNAPSHOT</version>
  <description>A REST API module to compose VSD and CDs.</description>
  <url>https://github.com/TheWall89/5g-context-composer</url>
  <packaging>docker-build</packaging>

  <properties>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
    <maven.compiler.source>8</maven.compiler.source>
    <maven.compiler.target>8</maven.compiler.target>
    <docker.repository>mpergolesi</docker.repository>
  </properties>

  <dependencies>

    <dependency>
      <groupId>junit</groupId>
      <artifactId>junit</artifactId>
      <version>4.11</version>
      <scope>test</scope>
    </dependency>

    <dependency>
      <groupId>eu._5geve.blueprint</groupId>
      <artifactId>5geve-blueprint-libs</artifactId>
      <version>0.0.11-SNAPSHOT</version>
    </dependency>
    <dependency>
      <groupId>it.nextworks.nfvmano</groupId>
      <artifactId>NfvManoLibsDescriptors</artifactId>
      <version>0.0.2-SNAPSHOT</version>
      <!-- The exclusion avoids logback warnings -->
      <exclusions>
        <exclusion>
          <groupId>ch.qos.logback</groupId>
          <artifactId>*</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
  </dependencies>

  <profiles>
    <profile>
      <id>dev</id>
      <activation>
        <activeByDefault>true</activeByDefault>
      </activation>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <alias>context-composer-dev</alias>
                  <name>${docker.repository}/${project.name}:${project.version}</name>
                  <build>
                    <dockerFileDir>${project.basedir}</dockerFileDir>
                    <args>
                      <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                    </args>
                    <buildOptions>
                      <target>dev</target>
                    </buildOptions>
                  </build>
                </image>
              </images>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>prod</id>
      <build>
        <plugins>
          <plugin>
            <groupId>io.fabric8</groupId>
            <artifactId>docker-maven-plugin</artifactId>
            <configuration>
              <images>
                <image>
                  <alias>context-composer-prod</alias>
                  <name>${docker.repository}/${project.name}:${project.version}</name>
                  <build>
                    <dockerFileDir>${project.basedir}</dockerFileDir>
                    <args>
                      <JAR_FILE>${project.build.finalName}.jar</JAR_FILE>
                      <!-- Labels -->
                      <BUILD_DATE>${maven.build.timestamp}</BUILD_DATE>
                      <REPOSITORY>${project.name}</REPOSITORY>
                      <DESCRIPTION>${project.description}</DESCRIPTION>
                      <VERSION>${project.version}</VERSION>
                      <!--suppress UnresolvedMavenProperty -->
                      <VCS_URL>${git.remote.origin.url}</VCS_URL>
                      <!--suppress UnresolvedMavenProperty -->
                      <VCS_REF>${git.commit.id}</VCS_REF>
                      <COMMAND>java -jar ${project.build.finalName}.jar</COMMAND>
                    </args>
                    <buildOptions>
                      <target>prod</target>
                    </buildOptions>
                  </build>
                </image>
              </images>
            </configuration>
          </plugin>
          <plugin>
            <groupId>pl.project13.maven</groupId>
            <artifactId>git-commit-id-plugin</artifactId>
            <configuration>
              <injectAllReactorProjects>true</injectAllReactorProjects>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
  </profiles>

  <build>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <executions>
          <execution>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <transformers>
                <transformer
                  implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>${project.groupId}.App</mainClass>
                </transformer>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
    <!-- lock down plugins versions to avoid using Maven defaults (may be moved to parent pom) -->
    <pluginManagement>
      <plugins>
        <!-- clean lifecycle,
        see https://maven.apache.org/ref/current/maven-core/lifecycles.html#clean_Lifecycle -->
        <plugin>
          <artifactId>maven-clean-plugin</artifactId>
          <version>3.1.0</version>
        </plugin>
        <!-- default lifecycle, jar packaging:
        see https://maven.apache.org/ref/current/maven-core/default-bindings.html#Plugin_bindings_for_jar_packaging -->
        <plugin>
          <artifactId>maven-resources-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.8.0</version>
        </plugin>
        <plugin>
          <artifactId>maven-surefire-plugin</artifactId>
          <version>2.22.1</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-shade-plugin</artifactId>
          <version>3.2.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-jar-plugin</artifactId>
          <version>3.0.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-install-plugin</artifactId>
          <version>2.5.2</version>
        </plugin>
        <plugin>
          <artifactId>maven-deploy-plugin</artifactId>
          <version>2.8.2</version>
        </plugin>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-release-plugin</artifactId>
          <version>2.5.3</version>
        </plugin>
        <!-- site lifecycle,
        see https://maven.apache.org/ref/current/maven-core/lifecycles.html#site_Lifecycle -->
        <plugin>
          <artifactId>maven-site-plugin</artifactId>
          <version>3.7.1</version>
        </plugin>
        <plugin>
          <artifactId>maven-project-info-reports-plugin</artifactId>
          <version>3.0.0</version>
        </plugin>
        <!-- maven-docker-plugin,
        see https://github.com/fabric8io/docker-maven-plugin -->
        <plugin>
          <groupId>io.fabric8</groupId>
          <artifactId>docker-maven-plugin</artifactId>
          <version>0.28.0</version>
          <extensions>true</extensions>
        </plugin>
        <plugin>
          <groupId>pl.project13.maven</groupId>
          <artifactId>git-commit-id-plugin</artifactId>
          <version>2.2.5</version>
          <executions>
            <execution>
              <id>get-the-git-infos</id>
              <goals>
                <goal>revision</goal>
              </goals>
              <!-- *NOTE*: The default phase of revision is initialize, but in case you want to change it, you can do so by adding the phase here -->
              <phase>initialize</phase>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
  </build>
</project>
